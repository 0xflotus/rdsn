ROOT = d:\rdsn

BOOST_INC=$(ROOT)/external
BOOST_LIB=$(ROOT)/external/libs
rDSN_INC=$(ROOT)/inc
BIN_DIR= $(ROOT)\bin
COMMON_LIBS= \
	libboost_chrono-vc120-mt-1_57.lib \
	libboost_date_time-vc120-mt-1_57.lib \
	libboost_filesystem-vc120-mt-1_57.lib \
	libboost_regex-vc120-mt-1_57.lib \
	libboost_system-vc120-mt-1_57.lib \
	libboost_thread-vc120-mt-1_57.lib \
	dsn.core.lib \
	dsn.dev.lib \
	dsn.tools.common.lib \
	dsn.tools.simulator.lib

BIN_DIR= $(ROOT)\bin
INC= $(INC_EXTRA) /I. /I$(BOOST_INC) /I$(rDSN_INC)
CPPFLAGS= $(INC) /W3 /nologo /wd4996 /EHsc \
		  /GS /analyze- /Gy /Zc:wchar_t /Zi /Gm- /O2 \
		  /fp:precise /D "WIN32" /D "NDEBUG" /D "_LIB" /D "_UNICODE" /D "UNICODE" \
		  /D "_CRT_SECURE_NO_WARNINGS" \
		  /errorReport:prompt /WX- /Zc:forScope /Gd /Oy- /Oi /MT	  
		  
LIBFLAGS= /nologo
LINKFLAGS = /LIBPATH:$(BOOST_LIB) /LIBPATH:$(BIN_DIR) $(COMMON_LIBS) $(LIB_EXTRA)

!if [bash -c "echo SOURCES = *.cpp" >.source.mk]
!error failed to generate source list
!endif
!include .source.mk

OBJS = $(SOURCES:.cpp=.obj)

all: $(TYPE)

.cpp.obj:
	$(CPP) $(CPPFLAGS) /c $< /Fo$@

$(BIN_DIR):
	-mkdir $(BIN_DIR)
	
clean:
	-del *.obj
	-del .source.mk
	-del *.idb
	-del *.pdb
	-del $(BIN_DIR)\$(TARGET)

EXE: $(BIN_DIR) $(OBJS)
	link $(LINKFLAGS) $(OBJS) /out:$(BIN_DIR)/$(TARGET)

LIB: $(BIN_DIR) $(OBJS)
	lib $(LIBFLAGS) $(OBJS) /out:$(BIN_DIR)/$(TARGET)

