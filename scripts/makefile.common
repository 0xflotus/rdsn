# ROOT = /Users/imzhenyu/projects/dsn
ROOT = /home/zhenyug/projects/dsn

SYS_INC = /usr/local/include
SYS_LIB = /usr/lib/x86_64-linux-gnu
SYS_LIB_DEPS = \
	-lpthread \
	-lstdc++ \
	-lrt \
	-lboost_chrono \
	-lboost_date_time \
	-lboost_filesystem \
	-lboost_regex \
	-lboost_system \
	-lboost_thread

BIN_DIR = $(ROOT)/bin

LIB_EXTRA_S = $(LIB_EXTRA) dsn.core dsn.dev dsn.tools.common dsn.tools.simulator 
LIB_EXTRA_DEPS = $(LIB_EXTRA_S:%=-l%)
LIB_EXTRA_TARGETS = $(LIB_EXTRA_S:%=$(BIN_DIR)/lib%.a) 
LIB_NONLINKED_WR = $(BIN_DIR)/libdsn.core.a \
				   $(SYS_LIB)/libboost_thread.a \
				   $(SYS_LIB)/libboost_filesystem.a \
				   $(SYS_LIB)/librt.a 

SOURCES = $(wildcard *.cpp)
OBJS = $(SOURCES:%.cpp=%.o)

CPP = g++
CPPFLAGS = -std=c++11 -I$(ROOT)/inc -I$(SYS_INC) -I./ $(INC_EXTRA) -O0 -g 
LD = g++
LDFLAGS = -L$(BIN_DIR) -L$(SYS_LIB) $(SYS_LIB_DEPS)  $(LIB_EXTRA_DEPS) $(LIB_NONLINKED_WR)
AR = ar
ARFLAGS = rv

all: $(TYPE)

$(BIN_DIR):
	-mkdir $(BIN_DIR)

clean:
	-rm *.o
	-rm $(BIN_DIR)/$(TARGET)

%.o : %.cpp
	$(CPP) -c $(CPPFLAGS) $< -o $@

LIB: $(BIN_DIR) $(OBJS)
	echo building library $(BIN_DIR)/$(TARGET) ...
	$(AR) $(ARFLAGS) $(BIN_DIR)/$(TARGET) $(OBJS)

EXE: $(BIN_DIR) $(OBJS) $(LIB_EXTRA_TARGETS)
	echo building executable $(BIN_DIR)/$(TARGET) ...
	$(LD) -pthread -o $(BIN_DIR)/$(TARGET) $(OBJS) $(LDFLAGS) 



	
