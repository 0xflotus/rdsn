/**
 * Autogenerated by Thrift Compiler (@PACKAGE_VERSION@)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#include "fd_types.h"

namespace dsn { namespace fd {


beacon_msg::~beacon_msg() throw() {
}


void swap(beacon_msg &a, beacon_msg &b) {
  using ::std::swap;
  swap(a.time, b.time);
  swap(a.from, b.from);
  swap(a.to, b.to);
}

beacon_msg::beacon_msg(const beacon_msg& other0) {
  time = other0.time;
  from = other0.from;
  to = other0.to;
}
beacon_msg& beacon_msg::operator=(const beacon_msg& other1) {
  time = other1.time;
  from = other1.from;
  to = other1.to;
  return *this;
}

beacon_ack::~beacon_ack() throw() {
}


void swap(beacon_ack &a, beacon_ack &b) {
  using ::std::swap;
  swap(a.time, b.time);
  swap(a.is_master, b.is_master);
  swap(a.primary_node, b.primary_node);
  swap(a.allowed, b.allowed);
}

beacon_ack::beacon_ack(const beacon_ack& other2) {
  time = other2.time;
  is_master = other2.is_master;
  primary_node = other2.primary_node;
  allowed = other2.allowed;
}
beacon_ack& beacon_ack::operator=(const beacon_ack& other3) {
  time = other3.time;
  is_master = other3.is_master;
  primary_node = other3.primary_node;
  allowed = other3.allowed;
  return *this;
}
}} // namespace
