// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: idl_test.proto

#ifndef PROTOBUF_idl_5ftest_2eproto__INCLUDED
#define PROTOBUF_idl_5ftest_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/map.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace dsn {
namespace idl {
namespace test {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_idl_5ftest_2eproto();
void protobuf_AssignDesc_idl_5ftest_2eproto();
void protobuf_ShutdownFile_idl_5ftest_2eproto();

class test_protobuf_item;

// ===================================================================

class test_protobuf_item : public ::google::protobuf::Message {
 public:
  test_protobuf_item();
  virtual ~test_protobuf_item();

  test_protobuf_item(const test_protobuf_item& from);

  inline test_protobuf_item& operator=(const test_protobuf_item& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const test_protobuf_item& default_instance();

  void Swap(test_protobuf_item* other);

  // implements Message ----------------------------------------------

  inline test_protobuf_item* New() const { return New(NULL); }

  test_protobuf_item* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const test_protobuf_item& from);
  void MergeFrom(const test_protobuf_item& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(test_protobuf_item* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // optional bool bool_item = 1;
  void clear_bool_item();
  static const int kBoolItemFieldNumber = 1;
  bool bool_item() const;
  void set_bool_item(bool value);

  // optional int32 int32_item = 2;
  void clear_int32_item();
  static const int kInt32ItemFieldNumber = 2;
  ::google::protobuf::int32 int32_item() const;
  void set_int32_item(::google::protobuf::int32 value);

  // optional int64 int64_item = 3;
  void clear_int64_item();
  static const int kInt64ItemFieldNumber = 3;
  ::google::protobuf::int64 int64_item() const;
  void set_int64_item(::google::protobuf::int64 value);

  // optional uint32 uint32_item = 4;
  void clear_uint32_item();
  static const int kUint32ItemFieldNumber = 4;
  ::google::protobuf::uint32 uint32_item() const;
  void set_uint32_item(::google::protobuf::uint32 value);

  // optional uint64 uint64_item = 5;
  void clear_uint64_item();
  static const int kUint64ItemFieldNumber = 5;
  ::google::protobuf::uint64 uint64_item() const;
  void set_uint64_item(::google::protobuf::uint64 value);

  // optional float float_item = 6;
  void clear_float_item();
  static const int kFloatItemFieldNumber = 6;
  float float_item() const;
  void set_float_item(float value);

  // optional double double_item = 7;
  void clear_double_item();
  static const int kDoubleItemFieldNumber = 7;
  double double_item() const;
  void set_double_item(double value);

  // optional string string_item = 8;
  void clear_string_item();
  static const int kStringItemFieldNumber = 8;
  const ::std::string& string_item() const;
  void set_string_item(const ::std::string& value);
  void set_string_item(const char* value);
  void set_string_item(const char* value, size_t size);
  ::std::string* mutable_string_item();
  ::std::string* release_string_item();
  void set_allocated_string_item(::std::string* string_item);

  // map<int32, int32> map_int32_item = 9;
  int map_int32_item_size() const;
  void clear_map_int32_item();
  static const int kMapInt32ItemFieldNumber = 9;
  const ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >&
      map_int32_item() const;
  ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >*
      mutable_map_int32_item();

  // repeated int32 repeated_int32_item = 10;
  int repeated_int32_item_size() const;
  void clear_repeated_int32_item();
  static const int kRepeatedInt32ItemFieldNumber = 10;
  ::google::protobuf::int32 repeated_int32_item(int index) const;
  void set_repeated_int32_item(int index, ::google::protobuf::int32 value);
  void add_repeated_int32_item(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      repeated_int32_item() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_repeated_int32_item();

  // @@protoc_insertion_point(class_scope:dsn.idl.test.test_protobuf_item)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  bool bool_item_;
  ::google::protobuf::int32 int32_item_;
  ::google::protobuf::int64 int64_item_;
  ::google::protobuf::uint64 uint64_item_;
  ::google::protobuf::uint32 uint32_item_;
  float float_item_;
  double double_item_;
  ::google::protobuf::internal::ArenaStringPtr string_item_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::google::protobuf::int32, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 >
      test_protobuf_item_MapInt32ItemEntry;
  ::google::protobuf::internal::MapField<
      ::google::protobuf::int32, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 > map_int32_item_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > repeated_int32_item_;
  mutable int _repeated_int32_item_cached_byte_size_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_idl_5ftest_2eproto();
  friend void protobuf_AssignDesc_idl_5ftest_2eproto();
  friend void protobuf_ShutdownFile_idl_5ftest_2eproto();

  void InitAsDefaultInstance();
  static test_protobuf_item* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// test_protobuf_item

// optional bool bool_item = 1;
inline void test_protobuf_item::clear_bool_item() {
  bool_item_ = false;
}
inline bool test_protobuf_item::bool_item() const {
  // @@protoc_insertion_point(field_get:dsn.idl.test.test_protobuf_item.bool_item)
  return bool_item_;
}
inline void test_protobuf_item::set_bool_item(bool value) {
  
  bool_item_ = value;
  // @@protoc_insertion_point(field_set:dsn.idl.test.test_protobuf_item.bool_item)
}

// optional int32 int32_item = 2;
inline void test_protobuf_item::clear_int32_item() {
  int32_item_ = 0;
}
inline ::google::protobuf::int32 test_protobuf_item::int32_item() const {
  // @@protoc_insertion_point(field_get:dsn.idl.test.test_protobuf_item.int32_item)
  return int32_item_;
}
inline void test_protobuf_item::set_int32_item(::google::protobuf::int32 value) {
  
  int32_item_ = value;
  // @@protoc_insertion_point(field_set:dsn.idl.test.test_protobuf_item.int32_item)
}

// optional int64 int64_item = 3;
inline void test_protobuf_item::clear_int64_item() {
  int64_item_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 test_protobuf_item::int64_item() const {
  // @@protoc_insertion_point(field_get:dsn.idl.test.test_protobuf_item.int64_item)
  return int64_item_;
}
inline void test_protobuf_item::set_int64_item(::google::protobuf::int64 value) {
  
  int64_item_ = value;
  // @@protoc_insertion_point(field_set:dsn.idl.test.test_protobuf_item.int64_item)
}

// optional uint32 uint32_item = 4;
inline void test_protobuf_item::clear_uint32_item() {
  uint32_item_ = 0u;
}
inline ::google::protobuf::uint32 test_protobuf_item::uint32_item() const {
  // @@protoc_insertion_point(field_get:dsn.idl.test.test_protobuf_item.uint32_item)
  return uint32_item_;
}
inline void test_protobuf_item::set_uint32_item(::google::protobuf::uint32 value) {
  
  uint32_item_ = value;
  // @@protoc_insertion_point(field_set:dsn.idl.test.test_protobuf_item.uint32_item)
}

// optional uint64 uint64_item = 5;
inline void test_protobuf_item::clear_uint64_item() {
  uint64_item_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 test_protobuf_item::uint64_item() const {
  // @@protoc_insertion_point(field_get:dsn.idl.test.test_protobuf_item.uint64_item)
  return uint64_item_;
}
inline void test_protobuf_item::set_uint64_item(::google::protobuf::uint64 value) {
  
  uint64_item_ = value;
  // @@protoc_insertion_point(field_set:dsn.idl.test.test_protobuf_item.uint64_item)
}

// optional float float_item = 6;
inline void test_protobuf_item::clear_float_item() {
  float_item_ = 0;
}
inline float test_protobuf_item::float_item() const {
  // @@protoc_insertion_point(field_get:dsn.idl.test.test_protobuf_item.float_item)
  return float_item_;
}
inline void test_protobuf_item::set_float_item(float value) {
  
  float_item_ = value;
  // @@protoc_insertion_point(field_set:dsn.idl.test.test_protobuf_item.float_item)
}

// optional double double_item = 7;
inline void test_protobuf_item::clear_double_item() {
  double_item_ = 0;
}
inline double test_protobuf_item::double_item() const {
  // @@protoc_insertion_point(field_get:dsn.idl.test.test_protobuf_item.double_item)
  return double_item_;
}
inline void test_protobuf_item::set_double_item(double value) {
  
  double_item_ = value;
  // @@protoc_insertion_point(field_set:dsn.idl.test.test_protobuf_item.double_item)
}

// optional string string_item = 8;
inline void test_protobuf_item::clear_string_item() {
  string_item_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& test_protobuf_item::string_item() const {
  // @@protoc_insertion_point(field_get:dsn.idl.test.test_protobuf_item.string_item)
  return string_item_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void test_protobuf_item::set_string_item(const ::std::string& value) {
  
  string_item_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dsn.idl.test.test_protobuf_item.string_item)
}
inline void test_protobuf_item::set_string_item(const char* value) {
  
  string_item_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dsn.idl.test.test_protobuf_item.string_item)
}
inline void test_protobuf_item::set_string_item(const char* value, size_t size) {
  
  string_item_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dsn.idl.test.test_protobuf_item.string_item)
}
inline ::std::string* test_protobuf_item::mutable_string_item() {
  
  // @@protoc_insertion_point(field_mutable:dsn.idl.test.test_protobuf_item.string_item)
  return string_item_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* test_protobuf_item::release_string_item() {
  
  return string_item_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void test_protobuf_item::set_allocated_string_item(::std::string* string_item) {
  if (string_item != NULL) {
    
  } else {
    
  }
  string_item_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), string_item);
  // @@protoc_insertion_point(field_set_allocated:dsn.idl.test.test_protobuf_item.string_item)
}

// map<int32, int32> map_int32_item = 9;
inline int test_protobuf_item::map_int32_item_size() const {
  return map_int32_item_.size();
}
inline void test_protobuf_item::clear_map_int32_item() {
  map_int32_item_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >&
test_protobuf_item::map_int32_item() const {
  // @@protoc_insertion_point(field_map:dsn.idl.test.test_protobuf_item.map_int32_item)
  return map_int32_item_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >*
test_protobuf_item::mutable_map_int32_item() {
  // @@protoc_insertion_point(field_mutable_map:dsn.idl.test.test_protobuf_item.map_int32_item)
  return map_int32_item_.MutableMap();
}

// repeated int32 repeated_int32_item = 10;
inline int test_protobuf_item::repeated_int32_item_size() const {
  return repeated_int32_item_.size();
}
inline void test_protobuf_item::clear_repeated_int32_item() {
  repeated_int32_item_.Clear();
}
inline ::google::protobuf::int32 test_protobuf_item::repeated_int32_item(int index) const {
  // @@protoc_insertion_point(field_get:dsn.idl.test.test_protobuf_item.repeated_int32_item)
  return repeated_int32_item_.Get(index);
}
inline void test_protobuf_item::set_repeated_int32_item(int index, ::google::protobuf::int32 value) {
  repeated_int32_item_.Set(index, value);
  // @@protoc_insertion_point(field_set:dsn.idl.test.test_protobuf_item.repeated_int32_item)
}
inline void test_protobuf_item::add_repeated_int32_item(::google::protobuf::int32 value) {
  repeated_int32_item_.Add(value);
  // @@protoc_insertion_point(field_add:dsn.idl.test.test_protobuf_item.repeated_int32_item)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
test_protobuf_item::repeated_int32_item() const {
  // @@protoc_insertion_point(field_list:dsn.idl.test.test_protobuf_item.repeated_int32_item)
  return repeated_int32_item_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
test_protobuf_item::mutable_repeated_int32_item() {
  // @@protoc_insertion_point(field_mutable_list:dsn.idl.test.test_protobuf_item.repeated_int32_item)
  return &repeated_int32_item_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace test
}  // namespace idl
}  // namespace dsn

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_idl_5ftest_2eproto__INCLUDED
